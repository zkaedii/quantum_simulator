[profile.default]
src = "src"
out = "out"
libs = ["lib"]
solc_version = "0.8.19"
optimizer = true
optimizer_runs = 200
via_ir = false

# Enhanced gas reporting
gas_reports = ["*"]
gas_price = 30_000_000_000  # 30 gwei
gas_limit = 30_000_000

# Comprehensive testing configuration
test = "test"
cache_path = "cache_forge"
broadcast = "broadcast"
ffi = false
fs_permissions = [
    { access = "read", path = "./test/fixtures" },
    { access = "write", path = "./gas-reports" }
]

# Enhanced verbosity and formatting
verbosity = 3
show_progress = true
colors = "auto"
force = false

# Advanced fuzzing configuration for quantum algorithms
[fuzz]
runs = 10000
max_test_rejects = 65536
seed = 0x1234
dictionary_weight = 40
include_storage = true
include_push_bytes = true

# Invariant testing for quantum properties
[invariant]
runs = 500
depth = 50
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true
shrink_run_limit = 5000

# Gas snapshot precision
[profile.gas]
optimizer_runs = 1000
gas_reports = ["QuantumAlgorithmNFT"]
gas_limit = 50_000_000

# CI/CD profile for automated testing
[profile.ci]
fuzz = { runs = 5000 }
verbosity = 4

# Fork testing configuration
[rpc_endpoints]
mainnet = "https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
sepolia = "https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
polygon = "https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
arbitrum = "https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"

# Etherscan configuration
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }

# Advanced compiler settings
[profile.production]
solc_version = "0.8.19"
optimizer = true
optimizer_runs = 1000
via_ir = true
bytecode_hash = "none"
cbor_metadata = false

# Gas optimization profile
[profile.gas-optimization]
optimizer = true
optimizer_runs = 10000
via_ir = true 